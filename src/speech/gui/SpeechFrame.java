package speech.gui;

import com.cybozu.labs.langdetect.Detector;
import com.cybozu.labs.langdetect.DetectorFactory;
import com.cybozu.labs.langdetect.LangDetectException;
import com.gtranslate.Language;
import com.gtranslate.Translator;
import java.awt.AWTException;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.net.URISyntaxException;
import java.net.URL;
import java.net.URLEncoder;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import speech.database.Database;

/**
 *
 * @author namishah
 */
public class SpeechFrame extends javax.swing.JFrame {
    private int counter = 0;
    private final Database db = new Database();
    /**
     * Creates new form speechFrame
     */
    public SpeechFrame() {
        try {
            //System.out.println(db.toString());
            initComponents();
            txtLog.setEnabled(false);
            cbxEditMode.setSelected(false);
            btnSave.setEnabled(false);
            btnDelete.setEnabled(false);
            setStatus("To start, click on 'New log'");
            System.out.println(Constants.PATH_TO_PROFILES);
            DetectorFactory.loadProfile(Constants.PATH_TO_PROFILES);
        } catch (LangDetectException ex) {
            Logger.getLogger(SpeechFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void setStatus(String text){
        lblStatus.setText(text);
        new java.util.Timer().schedule( 
        new java.util.TimerTask() {
            @Override
            public void run() {
                lblStatus.setText("");
            }
        }, 5000 
        );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        btnReq = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        cbxEditMode = new javax.swing.JCheckBox();
        lblStatus = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstLogs = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Speech");
        setName("frmSpeech"); // NOI18N

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        txtLog.setColumns(20);
        txtLog.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        txtLog.setLineWrap(true);
        txtLog.setRows(5);
        txtLog.setWrapStyleWord(true);
        txtLog.setMargin(new java.awt.Insets(10, 10, 10, 10));
        txtLog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtLogMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtLog);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addGap(0, 0, 0))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btnReq.setText("Request logs");
        btnReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReqActionPerformed(evt);
            }
        });

        btnNew.setText("New log");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setText("Save log");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete log");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        cbxEditMode.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        cbxEditMode.setText("Edit mode");
        cbxEditMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxEditModeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                    .addComponent(btnReq, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(cbxEditMode)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReq, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxEditMode)
                .addContainerGap())
        );

        lblStatus.setBackground(new java.awt.Color(255, 255, 255));
        lblStatus.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N

        lstLogs.setFont(new java.awt.Font("Lucida Grande", 0, 13)); // NOI18N
        lstLogs.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstLogs.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstLogs.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstLogsValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstLogs);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        btnReq.setText("Request logs");
        lstLogs.clearSelection();
        if(btnNew.getText().equalsIgnoreCase("New log")){
            txtLog.setText("");
            txtLog.setForeground(Color.BLACK);
            btnNew.setText("Clear");
            txtLog.setEnabled(true);
            cbxEditMode.setSelected(true);
            btnSave.setEnabled(true);
            setStatus("Click in the text area to start recording.");
        } else {
            btnSave.setEnabled(false);
            txtLog.setForeground(Color.RED);
            txtLog.setEnabled(false);
            cbxEditMode.setSelected(false);
            executeShortcut();
            btnNew.setText("New log");
            setStatus("The log was not saved!");
        }
        
    }//GEN-LAST:event_btnNewActionPerformed

    private void executeShortcut(){
        try {
            Robot r = new Robot();
            r.keyPress(Constants.KEY_1);
            r.keyPress(Constants.KEY_2);
            r.keyRelease(Constants.KEY_1);
            r.keyRelease(Constants.KEY_2);
            counter++;
        } catch (AWTException ex) {
            Logger.getLogger(SpeechFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void txtLogMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtLogMouseReleased
        if(txtLog.isEnabled()){
            txtLog.requestFocusInWindow();
            executeShortcut();
            setStatus("Speech is recording");
        }
    }//GEN-LAST:event_txtLogMouseReleased

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try{
            btnReq.setText("Request logs");
            btnReq.setEnabled(true);
            String content = txtLog.getText();
            if(!content.isEmpty()){
                if(txtLog.getForeground().equals(Color.BLUE) && txtLog.isEnabled()){
                    //Save
                    String id = lstLogs.getSelectedValue().toString().substring(lstLogs.getSelectedValue().toString().indexOf("[") + 1, lstLogs.getSelectedValue().toString().indexOf("]"));
                    db.saveLog(Integer.parseInt(id), content);
                    setStatus("Log saved to database.");
                } else {
                    //Insert
                    if(txtLog.isEnabled()){
                        db.insertLog(content, Constants.AUTHOR);
                        setStatus("Log inserted in database.");
                    }
                }
            } else {
                setStatus("Nothing has been saved, the log is empty.");
            }
            btnSave.setEnabled(false);
            btnNew.setText("New log");
            btnReq.doClick();
        } catch (Exception ex) {
            setStatus(ex.getMessage());
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReqActionPerformed
        if(btnReq.getText().equalsIgnoreCase("Request logs")){
            List<String> allLogs = db.getAllLogsFormat();
            DefaultListModel model = new DefaultListModel();
            for(String log:allLogs){
                model.addElement(log);
            }
            lstLogs.setModel(model);
            txtLog.setEnabled(false);
            cbxEditMode.setSelected(false);
            btnReq.setText("Translate log");
        } else {
            try {
                //Translate
                Translator translate = Translator.getInstance();
                Detector detector = DetectorFactory.create();
                detector.append(txtLog.getText());
                String lang = detector.detect();
                if(!lang.equalsIgnoreCase("nl")){
                    if(txtLog.getText().split(" ").length >= 50){
                        Desktop desktop = Desktop.isDesktopSupported() ? Desktop.getDesktop() : null;
                        if (desktop != null && desktop.isSupported(Desktop.Action.BROWSE)) {
                            try {
                                desktop.browse(new URL("https://translate.google.com/#en/nl/"+URLEncoder.encode(txtLog.getText())).toURI());
                            } catch (IOException e) {
                                //
                            } catch (URISyntaxException ex) {
                                Logger.getLogger(SpeechFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    } else {
                        String text = translate.translate(txtLog.getText().replace(",", "|").replace(".", "/"), Language.ENGLISH, Language.DUTCH);
                        txtLog.setText(text.replace(" |", ",").replace(" /", "."));
                        btnReq.setEnabled(false);              
                    }
                    if(txtLog.getText().split(" ").length > 1)
                        setStatus("The log contains ~" + txtLog.getText().split(" ").length + " words");
                    else
                        setStatus("The log contains ~" + txtLog.getText().split(" ").length + " word");
                } else {
                    setStatus("This text is already in dutch.");
                }
 
            } catch (LangDetectException ex) {
                Logger.getLogger(SpeechFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnReqActionPerformed

    private void lstLogsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstLogsValueChanged
        if(lstLogs.getSelectedValue() == null || ((lstLogs.getSelectedValue().toString().indexOf("]")) - (lstLogs.getSelectedValue().toString().indexOf("[")+1)) < 0){
            //
            btnDelete.setEnabled(false);
        } else {
            btnReq.setEnabled(true);
            btnSave.setEnabled(true);
            btnDelete.setEnabled(true);
            txtLog.setEnabled(true);
            cbxEditMode.setSelected(true);
            String id = lstLogs.getSelectedValue().toString().substring(lstLogs.getSelectedValue().toString().indexOf("[") + 1, lstLogs.getSelectedValue().toString().indexOf("]"));
            String content = db.getLogById(Integer.parseInt(id));
            txtLog.setForeground(Color.BLUE);
            txtLog.setText(content);
        }
    }//GEN-LAST:event_lstLogsValueChanged

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        btnReq.setText("Request logs");
        if(lstLogs.getSelectedValue() == null || ((lstLogs.getSelectedValue().toString().indexOf("]")) - (lstLogs.getSelectedValue().toString().indexOf("[")+1)) < 0){
            //
        } else {
            String id = lstLogs.getSelectedValue().toString().substring(lstLogs.getSelectedValue().toString().indexOf("[") + 1, lstLogs.getSelectedValue().toString().indexOf("]"));
            int dialogResult = JOptionPane.showConfirmDialog (null, "Are you sure you wish to delete this log?","Warning",JOptionPane.YES_NO_OPTION);
            if(dialogResult == JOptionPane.YES_OPTION){
                db.deleteLog(Integer.parseInt(id));
                setStatus("Log "+id+" has been deleted.");
            } else {
                setStatus("Log "+id+" has NOT been deleted.");
            }
            txtLog.setForeground(Color.BLACK);
            txtLog.setText("");
            btnReq.doClick();
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void cbxEditModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxEditModeActionPerformed
        if(cbxEditMode.isSelected()){
            txtLog.setEnabled(true);
        } else {
            txtLog.setEnabled(false);
        }
    }//GEN-LAST:event_cbxEditModeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SpeechFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SpeechFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SpeechFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SpeechFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SpeechFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnReq;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox cbxEditMode;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JList lstLogs;
    private javax.swing.JTextArea txtLog;
    // End of variables declaration//GEN-END:variables
}
